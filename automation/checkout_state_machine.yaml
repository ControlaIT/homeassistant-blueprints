blueprint:
  name: Check Out State Machine
  description: Handles the check out state machine
  domain: automation
  input:
    state_machine_entity:
      name: State Machine
      selector:
        entity:
          filter:
            - domain: input_select
    button_action_entity:
      name: Button Action Entity
      description: The Button Action Entity (Optional, if not needed type sensor.dummy)
      default: "sensor.dummy"
      selector:
        entity:
          filter:
            - domain: sensor
    button_device:
      name: Checkout Button
      description: The Button Device (MQTT) (Optional, if not needed select any device that is not mqtt, sun for instance)
      default: "device_id"
      selector:
        device:
    # button_cooldown:
    #   name: Button Cooldown Period
    #   description: The cooldown time for the checkout button so we don't count double presses
    #   default: 5
    #   selector:
    #     number:
    #       min: 0
    #       max: 180
    #       unit_of_measurement: minutes
    checkout_today_entity:
      name: Checkout Today Entity
      description: The sensor to check if the checkout is today
      selector:
        entity:
          filter:
            - domain: binary_sensor
    # occupancy_sensor_entity:
    #   name: Occupancy Sensor
    #   description: Sensor for the occupancy of the flat
    #   selector:
    #     entity:
    #       filter:
    #         - domain: binary_sensor
    #           device_class: occupancy
    #   default: "sensor.dummy"

triggers:
  - trigger: state
    entity_id: !input button_action_entity
    to: single
    id: button_pressed
  - trigger: device
    device_id: !input button_device
    domain: mqtt
    type: action
    subtype: single
    id: button_pressed
  - trigger: state
    entity_id: !input checkout_today_entity
    from: "off"
    to: "on"
    id: enter_checkout_day
  - trigger: state
    entity_id: !input checkout_today_entity
    to: "off"
    id: leave_checkout_day
conditions: []
actions:
  - choose:
      - conditions:
          - condition: trigger
            id:
              - enter_checkout_day
        sequence:
          - action: input_select.select_option
            metadata: {}
            data:
              option: not_checked_out
            target:
              entity_id: !input state_machine_entity
      - conditions:
          - condition: trigger
            id:
              - leave_checkout_day
        sequence:
          - action: input_select.select_option
            metadata: {}
            data:
              option: not_applicable
            target:
              entity_id: !input state_machine_entity
      - conditions:
          - condition: trigger
            id:
              - button_pressed
          - condition: state
            entity_id: !input checkout_today_entity
            state: "on"
          - condition: state
            entity_id: !input state_machine_entity
            state: 
              - not_checked_out
        sequence:
          - action: input_select.select_option
            metadata: {}
            data:
              option: checked_out
            target:
              entity_id: !input state_machine_entity
          - action: python_script.set_state
            data: 
              entity_id: !input state_machine_entity
              state: "checked_out"
              checkout_time: "{{ now() }}"
mode: queued
max: 10
