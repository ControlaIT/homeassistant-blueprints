blueprint:
  name: Check Out State Machine
  description: Handles the check out state machine
  domain: automation
  input:
    state_machine_entity:
      name: State Machine
      selector:
        entity:
          filter:
            - domain: input_select
    button_action_entity:
      name: Button Action Entity
      description: The Button Action Entity (Optional, if not needed type sensor.dummy)
      default: "sensor.dummy"
      selector:
        entity:
          filter:
            - domain: sensor
    button_device:
      name: Checkout Button
      description: The Button Device (MQTT) (Optional, if not needed select any device that is not mqtt, sun for instance)
      default: "device_id"
      selector:
        device:
    checkout_today_entity:
      name: Checkout Today Entity
      description: The sensor to check if the checkout is today
      selector:
        entity:
          filter:
            - domain: binary_sensor
    occupancy_sensor_entity:
      name: Occupancy Sensor
      description: Sensor for the occupancy of the apartment
      selector:
        entity:
          filter:
            - domain: binary_sensor
              device_class: occupancy
      default: "sensor.dummy"
    force_checkout_button_entity:
      name: Force Checkout Button
      description: Input Button to force the checkout when the guest forgets
      selector:
        entity:
          filter:
            - domain: input_button
      default: input_button.dummy
    helper_checkout_time_entity:
      name: Checkout Time Helper
      selector:
        entity:
          filter:
            - domain: input_datetime
      default: "input_datetime.dummy"
    helper_last_movement_time_entity:
      name: Last Movement Time Helper
      selector:
        entity:
          filter:
            - domain: input_datetime
      default: "input_datetime.dummy"
trigger_variables:
  input_state_machine_entity: !input state_machine_entity
  input_occupancy_sensor_entity: !input occupancy_sensor_entity
triggers:
  - trigger: state
    entity_id: !input button_action_entity
    to: single
    id: button_pressed
  - trigger: device
    device_id: !input button_device
    domain: mqtt
    type: action
    subtype: single
    id: button_pressed
  - trigger: state
    entity_id:
      - !input force_checkout_button_entity
    id: button_pressed
    from:
    to:
  - trigger: state
    entity_id: !input checkout_today_entity
    from: "off"
    to: "on"
    id: enter_checkout_day
  - trigger: state
    entity_id: !input checkout_today_entity
    to: "off"
    id: leave_checkout_day
  - trigger: template
    value_template: >
      {{ is_state(input_state_machine_entity,'not_checked_out')
        and is_state(input_occupancy_sensor_entity,'off') 
      }}
    id: no_presence
  - trigger: template
    value_template: >
      {{ is_state(input_state_machine_entity,'not_checked_out')
        and is_state(input_occupancy_sensor_entity,'on') 
      }}
    id: still_presence
conditions: []
actions:
  - choose:
      - conditions:
          - condition: trigger
            id:
              - enter_checkout_day
        sequence:
          - action: input_select.select_option
            metadata: {}
            data:
              option: not_checked_out
            target:
              entity_id: !input state_machine_entity
      - conditions:
          - condition: trigger
            id:
              - leave_checkout_day
        sequence:
          - action: input_select.select_option
            metadata: {}
            data:
              option: not_applicable
            target:
              entity_id: !input state_machine_entity
      - conditions:
          - condition: trigger
            id:
              - button_pressed
          - condition: state
            entity_id: !input state_machine_entity
            state:
              - not_checked_out
        sequence:
          - action: input_select.select_option
            metadata: {}
            data:
              option: checked_out
            target:
              entity_id: !input state_machine_entity
          - action: input_datetime.set_datetime
            target:
              entity_id: !input helper_checkout_time_entity
            data:
              time: "{{ now().strftime('%H:%M:%S') }}"
      - conditions:
          - condition: trigger
            id:
              - no_presence
        sequence:
          - action: input_datetime.set_datetime
            target:
              entity_id: !input helper_last_movement_time_entity
            data:
              time: "{{ now().strftime('%H:%M:%S') }}"
      - conditions:
          - condition: trigger
            id:
              - still_presence
        sequence:
          - action: input_datetime.set_datetime
            target:
              entity_id: !input helper_last_movement_time_entity
            data:
              time: 00:00:00
mode: queued
max: 100
trace:
  stored_traces: 20
